service: tveditor-proxy-api
custom:
  service: "tveditor-proxy-api"
  stage: ${opt:stage, self:provider.stage}
  tvEditorTable: "tveditor-${self:custom.stage}"
  userPoolId: ${opt:userPoolId}
  region: ${opt:region, self:provider.region}
  flexgetApiUrl: ${opt:flexgetApiUrl}
  flexgetApiUser: ${opt:flexgetApiUser}
  flexgetApiPass: ${opt:flexgetApiPass}
  taskName: ${opt:taskName}
  tvdbApiUrl: ${opt:tvdbApiUrl}
  tvdbPin: ${opt:tvdbPin}
  tvdbApiKey: ${opt:tvdbApiKey}
  cognitoClientId: ${opt:cognitoClientId}
  movieListId: ${opt:movieListId}

plugins:
  - serverless-webpack
  - serverless-attach-managed-policy
  - serverless-offline

package:
  individually: true

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: us-east-1
  timeout: 30

  environment:
    USER_POOL_ID: "${self:custom.userPoolId}"
    TV_EDITOR_TABLE: "${self:custom.tvEditorTable}"
    API_SERVICE: "${self:service}"
    STAGE: "${self:provider.stage}"
    FLEXGET_API_URL: "${self:custom.flexgetApiUrl}"
    FLEXGET_API_USER: "${self:custom.flexgetApiUser}"
    FLEXGET_API_PASSWORD: "${self:custom.flexgetApiPass}"
    TASK_NAME: "${self:custom.taskName}"
    TVDB_API_URL: "${self:custom.tvdbApiUrl}"
    TVDB_PIN: "${self:custom.tvdbPin}"
    TVDB_API_KEY: "${self:custom.tvdbApiKey}"
    COGNITO_CLIENT_ID: "${self:custom.cognitoClientId}"
    MOVIE_LIST_ID: "${self:custom.movieListId}"
resources:
  Resources:
    TVEditorProxyAPIRole:
      Type: AWS::IAM::Role
      Properties:
        Path: /lambda/
        RoleName: TVEditorProxyAPIRole
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action: sts:AssumeRole
        Policies:
          - PolicyName: TVEditorProxyAPIPolicy
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: Allow
                  Action:
                    - logs:CreateLogGroup
                    - logs:CreateLogStream
                    - logs:PutLogEvents
                  Resource:
                    - "Fn::Join":
                        - ":"
                        - - "arn:aws:logs"
                          - Ref: "AWS::Region"
                          - Ref: "AWS::AccountId"
                          - "log-group:/aws/lambda/*:*:*"
                - Effect: Allow
                  Action:
                    - secretsmanager:ListSecrets
                    - secretsmanager:GetSecretValue
                  Resource: "*"
                - Effect: Allow
                  Action:
                    - cognito-idp:AdminGetUser
                    - cognito-idp:AdminSetUserPassword
                    - cognito-idp:AdminCreateUser
                  Resource: "arn:aws:cognito-idp:${self:provider.region}:*:userpool/${self:custom.userPoolId}"
                - Effect: Allow
                  Action:
                    - "dynamodb:DescribeTable"
                    - "dynamodb:DescribeStream"
                    - "dynamodb:ListStreams"
                    - "dynamodb:GetShardIterator"
                    - "dynamodb:GetRecords"
                    - "dynamodb:Query"
                    - "dynamodb:Scan"
                    - "dynamodb:GetItem"
                    - "dynamodb:PutItem"
                    - "dynamodb:UpdateItem"
                    - "dynamodb:DeleteItem"
                    - "dynamodb:BatchGetItem"
                    - "dynamodb:BatchWriteItem"
                    - "dynamodb:ConditionCheckItem"
                  Resource:
                    - "arn:aws:dynamodb:*:*:table/${self:custom.tvEditorTable}"
                    - "arn:aws:dynamodb:*:*:table/${self:custom.tvEditorTable}/index/*"
    TVEditorTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.tvEditorTable}
        AttributeDefinitions:
          - AttributeName: hashId
            AttributeType: S
          - AttributeName: sortId
            AttributeType: S
          - AttributeName: secondSortId
            AttributeType: S
          - AttributeName: thirdSortId
            AttributeType: N
        KeySchema:
          - AttributeName: hashId
            KeyType: HASH
          - AttributeName: sortId
            KeyType: RANGE
        LocalSecondaryIndexes:
          - IndexName: secondSortIndex
            KeySchema:
              - AttributeName: hashId
                KeyType: HASH
              - AttributeName: secondSortId
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
          - IndexName: thirdSortIndex
            KeySchema:
              - AttributeName: hashId
                KeyType: HASH
              - AttributeName: thirdSortId
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        Tags:
          - Key: service
            Value: ${self:custom.service}
          - Key: function
            Value: onlineOrderingTables


functions:
  auth:
    handler: ./src/auth/auth.authorizer
    role: TVEditorProxyAPIRole
  proxy-api:
    handler: src/functions/proxy/index.handler
    role: TVEditorProxyAPIRole
    timeout: 30
    events:
      - http:
          method: any
          path: /api/{proxy+}
          authorizer: auth
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
            allowCredentials: true
            cacheControl: 'max-age=600, s-maxage=600, proxy-revalidate'
  auth-api:
    handler: src/functions/auth/index.handler
    role: TVEditorProxyAPIRole
    timeout: 30
    events:
      - http:
          method: any
          path: /auth/{proxy+}
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
            allowCredentials: true
            cacheControl: 'max-age=600, s-maxage=600, proxy-revalidate'